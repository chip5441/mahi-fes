#pragma once
#include <vector>

namespace fes{

/// Generic class for capturing a message
class Message
{
public:
    Message();
    ~Message();
    size_t get_size();
    unsigned char get_checksum();
    std::vector<unsigned char> get_message();
    

protected:
    std::vector<unsigned char> m_message; ///< vector of the message itself

    size_t m_size; ///< size of the given message

    unsigned char m_checksum; ///< checksum of the given message

    unsigned char m_message_type; ///< type of message

    /// Returns the checksum generated by the 
    unsigned char calc_checksum();
    /// Returns a pointer to the first element of the message vector
    unsigned char* get_message_pointer();
};

} // namespace fes